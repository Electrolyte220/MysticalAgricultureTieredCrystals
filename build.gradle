plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
}

version = '1.3.0'
group = 'com.electrolyte.matc' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = 'matc'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.19.2'
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'matc'

            mods {
                matc {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'matc'

            mods {
                matc {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'matc', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                matc {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name ='Progwml6 maven'
        url = 'https://dvs1.progwml6.com/files/maven/'
    }
    maven {
        name = 'BlakeBr0'
        url = 'https://maven.blakesmods.com'
    }
    //flatDir { dir 'libs'}
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.0.7'

    runtimeOnly fg.deobf("mezz.jei:jei-${mc_version}-forge:${jei_version}")

   // implementation fg.deobf("libs:Cucumber:${mc_version}-5.0.1")
   // runtimeOnly fg.deobf("libs:MysticalAgriculture:${mc_version}-5.0.0")
   // runtimeOnly fg.deobf("libs:MysticalAgradditions:${mc_version}-5.0.0")

    implementation fg.deobf("com.blakebr0.cucumber:Cucumber:${mc_version}-${cucumber_version}")
    runtimeOnly fg.deobf("com.blakebr0.mysticalagriculture:MysticalAgriculture:${mc_version}-${myst_agri_version}")
    runtimeOnly fg.deobf("com.blakebr0.mysticalagradditions:MysticalAgradditions:${mc_version}-${myst_agridditions_version}")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "Mystical Agriculture Tiered Crystals",
            "Specification-Vendor": "Electrolyte",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": project.jar.archiveVersion,
            "Implementation-Vendor" :"Electrolyte",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}